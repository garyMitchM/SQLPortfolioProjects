-- Customers (names, customer ID, and country) who are not in the US. 
SELECT 
      c.CustomerId
    , c.firstName
    , c.LastName
    , c.Country 
FROM 
    chinook.customers c
WHERE 
    1=1
    AND c.Country <> 'USA'
    ;


-- Only the Customers from Brazil.
SELECT 
    * 
FROM 
    chinook.customers
WHERE 
    1=1
    AND Country = 'Brazil'
    ;


-- Customer's Name, Invoice ID, Date of the invoice, and billing country from customers in brazil.
SELECT 
      c.FirstName
    , c.LastName
    , i.InvoiceId
    , i.InvoiceDate
    , i.BillingCountry
FROM 
    chinook.invoices i
LEFT JOIN 
    chinook.customers c
        ON c.CustomerId = i.CustomerId
WHERE 
    1=1
    AND i.BillingCountry = 'Brazil'
    ;


-- The Employees who are Sales Agents.
SELECT 
    * 
FROM 
    chinook.employees e
WHERE 
    1=1
    AND e.Title = 'Sales Support Agent'
    ;


-- A distinct list of billing countries from the Invoice table.
SELECT 
    distinct(BillingCountry) 
FROM 
    chinook.invoices
    ;


-- The invoices associated with each sales agent
SELECT 
      e.FirstName 
    , e.LastName 
    , e.employeeId 
    , i.invoiceId
FROM 
    chinook.customers c
JOIN 
    chinook.invoices i
        ON c.CustomerId = i.CustomerId
JOIN 
    chinook.employees e
        ON e.EmployeeId = c.SupportRepId
    ;


-- Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.
SELECT 
      c.FirstName AS customer_FirstName 
    , c.LastName AS customer_LastName 
    , c.Country 
    , i.Total
    , e.FirstName AS agent_FirstName 
    , e.LastName AS agent_LastName
FROM 
    chinook.invoices i
JOIN 
    chinook.customers c 
        ON i.customerId = c.customerId
JOIN 
    chinook.employees e 
        ON e.EmployeeId = c.SupportRepId
    ;


-- Number of invoices in 2009
SELECT 
    COUNT(*) AS num_inv_2009
FROM 
    chinook.invoices 
WHERE 
    1=1
    AND InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
    ;


-- the total sales for 2009
SELECT 
    ROUND(SUM(Total), 2) AS total_sales_2009
FROM 
    chinook.invoices
WHERE 
    1=1
    AND InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
    ;

-- The purchased track name with each invoice line ID.
SELECT 
      t.name 
    , inv_itm.invoiceLineId 
FROM 
    chinook.tracks t
JOIN 
    chinook.invoice_items inv_itm 
        ON t.TrackId = inv_itm.TrackId
    ;


-- The purchased track name AND artist name with each invoice line ID
SELECT 
      t.name AS Track 
    , ar.name AS Artist 
    , inv_itm.InvoiceLineId 
FROM 
    chinook.tracks t
JOIN 
    chinook.invoice_items inv_itm 
        ON t.TrackId = inv_itm.TrackId
JOIN 
    chinook.albums a 
        ON t.albumId = a.albumId
JOIN 
    chinook.artists ar 
        ON a.artistId = ar.artistId
    ;


-- All the Tracks including the Album name, Media type, and Genre.
SELECT 
      a.title AS 'Album Name' 
    , m.name AS 'Media Type' 
    , g.name AS 'Genre'
FROM 
    chinook.tracks t
JOIN 
    chinook.albums a 
        ON t.AlbumId = a.AlbumId
JOIN 
    chinook.media_types m 
        ON t.MediaTypeId = m.MediaTypeId
JOIN 
    chinook.genres g 
        ON t.GenreId = g.GenreId
    ;


-- The total sales made by each sales agent.
SELECT 
      e.FirstName 
    , e.LastName
    , ROUND(SUM(i.Total), 2) AS 'Total Sales'
FROM    
    chinook.invoices i
JOIN 
    chinook.employees e 
        ON e.EmployeeId = c.SupportRepId
JOIN 
    chinook.customers c 
        ON i.customerId = c.customerId
WHERE 
    1=1
    AND e.title = 'Sales Support Agent'
GROUP BY 
    e.FirstName
    ;


-- The sales agent made the most dollars in sales in 2009.
SELECT 
      e.FirstName 
    , e.LastName
    , ROUND(SUM(i.total), 2) AS 'Total Sales' 
FROM 
    chinook.invoices i
JOIN 
    chinook.customers c 
        ON i.CustomerId = c.CustomerId
JOIN 
    chinook.employees e 
        ON c.SupportRepId = e.EmployeeId
WHERE 
    1=1
    AND e.title = 'Sales Support Agent'
    AND i.InvoiceDate BETWEEN '2009-01-01' AND '2009-12-31'
GROUP BY 
    e.FirstName
ORDER BY 
    ROUND(SUM(i.total), 2) DESC 
LIMIT 1
    ;


-- A List of tracks with the playlist id, playlist name, track name, artist name, album name, and genre.
SELECT 
      pt.playlistid AS 'Playlist Id'
    , p.name AS 'Playlist Name'
    , t.name AS 'Track Name'
    , ar.name AS 'Artist Name'
    , a.title AS 'Album Title' 
    , g.name AS 'Genre' 
FROM 
    chinook.playlists p
JOIN 
    chinook.playlist_track pt 
        ON p.playlistid = pt.playlistid
JOIN 
    chinook.tracks t 
        ON pt.trackid = t.trackid
JOIN 
    chinook.albums a
        ON t.albumId =  a.albumId
JOIN 
    chinook.artists ar
        ON a.artistId = ar.artistId
JOIN 
    chinook.genres g
        ON t.genreId = g.genreId
    ;
